/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode* root,vector<int>&count)
    {
        if(root==NULL)return 0;
        count[root->val]++;
        if(root->left==NULL&& root->right==NULL)
        {
            int odd=0;
            for(int i=0;i<=9;i++)
            {
                if(count[i]%2 == 1)odd++;
                
                if(odd>=2){count[root->val]--;return 0;}
            }
            count[root->val]--;
            return 1;
        }
        
        int res =helper(root->left,count)+helper(root->right,count);
        count[root->val]--;
        return res;
        
        
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        if(root==NULL)return 0;vector<int>count(10,0);
        return helper(root,count);
    }
};
